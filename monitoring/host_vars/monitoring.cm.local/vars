---

fqdn: monitoring.cm.local

# -------------------------------------------------------------------------------------------------


dnsmasq_interface: lo
dnsmasq_upstream_servers:
  - 192.168.124.1
  - 141.1.1.1

# -------------------------------------------------------------------------------------------------

resolv_nameservers:
  - 127.0.0.1
  - 141.1.1.1
resolv_domain: cm.local

# -------------------------------------------------------------------------------------------------

firewalld_ports_open:
  - proto: tcp
    port: 22
  - proto: tcp
    port: 80

# -------------------------------------------------------------------------------------------------

openldap_server_domain_name: ldap.cm.local
openldap_server_ip: '127.0.0.1'
openldap_server_rootpw: '{{ vault__openldap__rootpw }}'

openldap_server_dc: "dc={{ ',dc='.join(openldap_server_domain_name.split('.') ) }}"

openldap_users:
  bodsch:
    password: system
    cn: "Bodo Schulz"
    givenname: "Bodo"
    sn: "Schulz"
    mail: "bodo@example.com"
    gecos: bodsch
    uid: 1042
    gid: 1042
    state: present
  icinga:
    password: icinga
    cn: "Icinga"
    givenname: "Icinga"
    sn: "Icinga"
    mail: "icinga@example.com"
    gecos: icinga
    uid: 1043
    gid: 1043
    state: present

openldap_groups:
  admin:
    description: Administrators Group
    gid: 1042
    members:
      - bodsch
  icinga:
    description: Icinga Group
    gid: 1043
    members:
      - bodsch
      - icinga

# -------------------------------------------------------------------------------------------------
# MariaDB

mariadb_bind_address: 127.0.0.1
mariadb_root_password: "{{ vault__mariadb__root }}"

mariadb_databases:
  - name: discovery
    collation: utf8mb4_bin
    encoding: utf8mb4

  - name: icinga2_ido
    collation: utf8mb4_bin
    encoding: utf8mb4

mariadb_users:

  - name: discovery
    host: '%'
    password: "{{ vault__mariadb__discovery }}"
    priv: "discovery.*:ALL"

  - name: icinga2_ido
    host: 127.0.0.1
    password: "{{ vault__mariadb__icinga2_ido }}"
    priv: "icinga2_ido.*:ALL"

# -------------------------------------------------------------------------------------------------

custom_hosts:
  - ip: 192.168.124.10
    description: database server
    names:
      - database.cm.local
      - mysql.cm.local
      - mongo.cm.local
      - mongodb.cm.local
  - ip: 192.168.124.20
    description: backend server
    names:
      - backend.cm.local
      - cms.cm.local
      - wfs.cm.local
      - studio.cm.local
      - preview.cm.local
      - solr-be.cm.local
      - feeder-preview.cm.local
  - ip: 192.168.124.30
    description: frontend server
    names:
      - frontend.cm.local
      - mls.cm.local
      - solr-fe.cm.local
      - solr-master.cm.local
      - feeder-live.cm.local
  - ip: 192.168.124.35
    description: delivery server
    names:
      - delivery.cm.local
      - rls.cm.local
      - solr-slave.cm.local
      - cae1.cm.local
      - cae2.cm.local
      - overview.cm.local
      - corporate.cm.local
  - ip: 192.168.124.50
    description: monitoring
    names:
      - ldap.cm.local
      - icinga.cm.local

# -------------------------------------------------------------------------------------------------

# service_discovery_log_level: DEBUG
# rest_service_log_level: DEBUG
# data_collector_log_level: DEBUG
# carbon_client_log_level: DEBUG
# grafana_client_log_level: DEBUG

# -------------------------------------------------------------------------------------------------

# PHP-FPM
php_enable_php_fpm: true

php_fpm_pools:
  - name: worker-01
    user: www-data
    group: www-data
    listen.owner: www-data
    listen.group: www-data
    listen: "/run/php/$pool.sock"
    pm: dynamic
    pm.max_children: 10
    pm.start_servers: 4
    pm.min_spare_servers: 2
    pm.max_spare_servers: 6
    pm.status_path: /status
    ping.path: /ping
    ping.response: pong
    access.log: /var/log/php-fpm/$pool_access.log
    access.format: "%R - %n - %{HTTP_HOST}e - %u %t \"%m %r [%Q%q]\" %s %f %{mili}d %{kilo}M %C%%"
    chdir: /
    env:
      PATH: "/usr/local/bin:/usr/bin:/bin"
      TMPDIR: "/tmp"
    php_admin_value:
      # sendmail_path: "/usr/sbin/sendmail -t -i -f www@my.domain.com"
      # error_log: "/var/log/fpm-bar.www.log"
      date.timezone: "Europe/Berlin"
      log_errors: 'on'
      max_execution_time: 300
      memory_limit: 512M
      # session.save_handler: memcached
      # session.save_path: "127.0.0.1:11211"
      upload_max_filesize: 32M
#      upload_tmp_dir: /var/tmp/fpm/worker-01

php_modules:
  - name: opcache
    enabled: true
    priority: 10
    content: |
      zend_extension=opcache.so
      opcache.enable=1
      opcache.enable_cli=1
      opcache.memory_consumption=128
      opcache.interned_strings_buffer=16
      opcache.max_accelerated_files=10000
      opcache.max_wasted_percentage=5
      opcache.validate_timestamps=1
      opcache.revalidate_path=0
      opcache.revalidate_freq=1
      opcache.max_file_size=0
  - name: pdo_mysql
    enabled: true
    priority: 20
    content: |
      extension=pdo_mysql.so
  - name: apcu
    enabled: false
    priority: 20
    content: |
      extension=apcu.so
      apc.shm_size=96M
      apc.enable_cli=0
      apc.rfc1867=1
  - name: gd
    enabled: true
    priority: 20
    content: |
      extension=gd.so
  - name: memcached
    enabled: false
    priority: 20
    content: |
      extension=memcached.so

# -------------------------------------------------------------------------------------------------
# icinga2

icinga2_certificate_cn: icinga.cm.local

icinga2_feature:
  ido_mysql:
    password: "{{ vault__mariadb__icinga2_ido }}"
  mainlog:
    severity: warning

icinga2_api_user:
  root:
    password: '{{ vault__icinga2_api_user__root }}'
    client_cn: NodeName
    permissions: '*'
  icingaweb:
    password: '{{ vault__icinga2_api_user__icingaweb }}'
    client_cn: NodeName
    permissions: '*'


# icinga2_hosts:
#
#   monitoring.cm.local:
#     import: generic-host
#     address: '{{ ansible_default_ipv4.address }}'
#     vars: |
#       os = "Linux"
#       dist = "{{ ansible_distribution }}"
#       dist_ver = "{{ ansible_distribution_version }}"
#       satellite = true
#       disks = {
#         "disk /" = {
#           disk_partitions = "/"
#         }
#       }

# -------------------------------------------------------------------------------------------------
# icingaweb2

icingaweb_auth_backend:
  icingaweb:
    password: "{{ vault__mariadb__icingaweb_config }}"
  icinga_ido:
    password: "{{ vault__mariadb__icinga2_ido }}"

icingaweb_users:
  admin:
    password: admin

icinga2_api_username: icingaweb
icinga2_api_password: '{{ vault__icinga2_api_user__icingaweb }}'

# -------------------------------------------------------------------------------------------------
# grafana
#
grafana_version: '6.5.1'

grafana_address: '127.0.0.1' # '{{ ansible_default_ipv4.address }}'
grafana_provisioning_synced: true
grafana_url: "http://monitoring.cm.local/grafana"
grafana_domain: monitoring.cm.local

grafana_log:
  mode: 'file'
  level: info

grafana_security:
  admin_user: admin
  admin_password: admin

# Datasources to configure
grafana_datasources:
  - name: "graphite"
    type: "graphite"
    access: "proxy"
    url: 'http://127.0.0.1:8088'
    # basicAuth: false
    isDefault: true

  - name: "Prometheus"
    type: "prometheus"
    access: "proxy"
    url: 'http://127.0.0.1:9092'
    # basicAuth: false
    isDefault: false

# grafana_dashboards_dir: ../inventories/monitoring/files/grafana/dashboards

# -------------------------------------------------------------------------------------------------

# nginx
#
nginx_server_tokens: "off"
nginx_remove_default_vhost: true

nginx_extra_http_options: |
  map_hash_max_size 128;
  map_hash_bucket_size 128;
  map $http_user_agent $ignore_ua {
    default                 1;
    "ELB-HealthChecker/1.0" 0;
    "ELB-HealthChecker/2.0" 0;
  }

nginx_upstreams:
  - name: rest_service
    servers:
      - '127.0.0.1:8080 max_fails=3 fail_timeout=30s'

  - name: grafana
    servers:
      - '127.0.0.1:3000 max_fails=3 fail_timeout=30s'

  - name: prometheus
    servers:
      - '127.0.0.1:9090 max_fails=3 fail_timeout=30s'



nginx_vhosts:
  - listen: "80 default_server"
    server_name: _
    filename: '{{ ansible_hostname }}.conf'
    access_log: /var/log/nginx/access.log
    error_log:  /var/log/nginx/error.log
    extra_parameters: |
      location = /favicon.ico {
        log_not_found off;
        access_log off;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ /\. {
        deny all;
      }
      location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
      }
      location /health {
        access_log off;
        return 200;
      }
      location /api {
        # log_not_found       off;
        access_log          /var/log/nginx/api_access.log;
        error_log           /var/log/nginx/api_error.log;
        add_header X-Backend "cm-rest-service";
        proxy_pass         http://rest_service/;
        proxy_redirect     default;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;
      }
      location /web {
        # log_not_found       off;
        access_log          /var/log/nginx/web_access.log;
        error_log           /var/log/nginx/web_error.log;
        add_header X-Backend "cm-rest-service";
        proxy_pass         http://rest_service/;
        proxy_redirect     default;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;
      }
      location / {
        return 301 /web;
        root                  /var/www/entry-page;
        index                 index.html;
        if ($ignore_ua) {
          access_log off;
        }
        # access_log            off;
        # error_log             /dev/stdout;
      }
      location /grafana/ {

        #log_not_found       off;
        #access_log          off;
        #error_log           off;

        add_header X-Backend "grafana";

        proxy_pass         http://grafana/;

        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
      }
      location /icinga {
        #log_not_found       off;
        #access_log          off;
        #error_log           off;

        add_header X-Backend "icingaweb2";

        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;

        root  /usr/share/icingaweb2/public;

        index index.php;

        location ~ ^/icinga/index\.php(.*)$ {
          fastcgi_index          index.php;
          fastcgi_param          ICINGAWEB_CONFIGDIR /etc/icingaweb2;
          fastcgi_param          SCRIPT_FILENAME /usr/share/icingaweb2/public/index.php;
          fastcgi_read_timeout   600;
          fastcgi_pass           unix:/run/php/worker-01.sock;
          include fastcgi_params;
        }

        location ~ ^/icinga(.+)? {
          alias /usr/share/icingaweb2/public;
          index index.php;
          try_files $1 $uri $uri/ /icinga/index.php$is_args$args;
        }

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
          expires 1d;
        }
      }


#   - listen: "80"
#     server_name: '{{ ansible_hostname }} {{ ansible_hostname }}.{{ ansible_domain }}'
#     filename: '{{ ansible_hostname }}.conf'
#     root: /var/www/html
#     index: index.html
#     access_log: '/var/log/nginx/access.log'
#     error_log:  '/var/log/nginx/error.log'
#     extra_parameters: |
#       location / {
#         add_header X-Backend "grafana";
#         proxy_pass http://grafana/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;
#         proxy_redirect off;
#       }
#       location /dist {
#         allow 127.0.0.1;
#         allow 172.20.6.165;
#         allow 172.20.6.166;
#         allow 172.20.6.169;
#         allow 172.20.6.170;
#         allow 172.20.6.171;
#         deny all;
#       }
#
#   - listen: 9190
#     server_name: '{{ ansible_hostname }}'
#     filename: 'prometheus.{{ ansible_hostname }}.conf'
#     extra_parameters: |
#       location /prometheus/ {
#         add_header X-Backend "prometheus";
#         proxy_pass http://prometheus/prometheus/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;
#         proxy_redirect off;
#       }
#     state: absent

# -------------------------------------------------------------------------------------------------

# trickster
#
trickster_proxy_server_listen_address: '127.0.0.1'
trickster_proxy_server_listen_port: 9092
trickster_metrics_listen_address: '127.0.0.1'
trickster_cache_type:  'redis'

# -------------------------------------------------------------------------------------------------
# prometheus
#
prometheus_version: 2.13.1
# we want trickster as cache, also bind to port 9091
prometheus_web_listen_address: '127.0.0.1:9091' # "{{ ansible_default_ipv4.address }}:9090"
prometheus_storage_retention: "90d"
prometheus_storage_retention_size: "100MB"

# -------------------------------------------------------------------------------------------------
